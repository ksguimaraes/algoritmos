module.exports = {
    preset: 'ts-jest',
    testEnvironment: 'node',
    collectCoverage: false,
    coverageDirectory: 'coverage',
    coverageReporters: ['json', 'lcov', 'text', 'clover'],
    testMatch: ['**/?(*.)+(unit|spec|test).ts'],
    moduleNameMapper: {
        '^@utils(.*)$': '<rootDir>/src/shared/utils$1',
        '^@services(.*)$': '<rootDir>/src/application/services$1',
        '^@config(.*)$': '<rootDir>/src/infrastructure/config$1',
        '^@factories(.*)$': '<rootDir>/src/infrastructure/factories$1',
        '^@use-cases(.*)$': '<rootDir>/src/application/use-cases$1',
        '^@application-interfaces(.*)$': '<rootDir>/src/application/interfaces$1',
        '^@application-services(.*)$': '<rootDir>/src/application/services$1',
        '^@schemas(.*)$': '<rootDir>/src/shared/schemas$1',
        '^@dtos(.*)$': '<rootDir>/src/application/dtos$1',
        '^@controllers(.*)$': '<rootDir>/src/infrastructure/server/controllers$1',
        '^@entities(.*)$': '<rootDir>/src/domain/entities$1',
        '^@services-interfaces(.*)$': '<rootDir>/src/domain/services$1',
        '^@errors(.*)$': '<rootDir>/src/shared/errors$1',
        '^@value-object(.*)$': '<rootDir>/src/domain/value-object$1',
        '^@clients(.*)$': '<rootDir>/src/infrastructure/clients$1',
        '^@repositories-interfaces(.*)$': '<rootDir>/src/domain/repositories$1',
        '^@repositories(.*)$': '<rootDir>/src/infrastructure/repositories$1',
    },
    transform: {
        '^.+\\.(ts|tsx)$': 'ts-jest',
    },
    collectCoverageFrom: [
        'src/**/*.ts',
        '!src/**/*.d.ts',
        '!src/**/index.ts',
        '!src/infrastructure/config/*.ts',
        '!src/infrastructure/factories/*.ts',
        '!src/infrastructure/server/fastify/fastify-server.ts',
        '!src/infrastructure/server/fastify/middlewares/*.ts',
        '!src/infrastructure/server/fastify/routes/*.ts',
        'src/infrastructure/lambda/**/*.ts',
        '!src/shared/schemas/*.ts',
        '!src/shared/utils/logger.utils.ts',
        '!src/shared/utils/swagger.utils.ts',
    ],
    moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx', 'json', 'node'],
};
